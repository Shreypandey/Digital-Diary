/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DigitalDiary;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author shrey
 */
public class NotepadGUI extends javax.swing.JFrame {
     String scribbleTitle;
     String scribblelink;
     String opentitle;
     String special;
     
     
    /**
     * Creates new form NotepadGUI
     * @param opentitle
     */
    public NotepadGUI(String opentitle) {
        initComponents();
        lTitle.setText(opentitle);
        this.opentitle=opentitle;
    }
    public NotepadGUI(String opentitle,String name){
        initComponents();
        lTitle.setText(opentitle);
        this.opentitle=opentitle;
        try(Connection con=mysqlConnect.connection("root", "shrey");
                Statement stmt=con.createStatement();){
        String query="Select * from Scribble where link='"+name+"';";
        ResultSet rs=stmt.executeQuery(query);
        if(rs.next()){scribbleTitle = rs.getString("Title");special=rs.getString("special");}
        scribblelink=name;
        if( null == special){}
        else switch (special) {
                case "Important":
                    bImportant.setSelected(true);
                    break;
                case "Favourite":
                    bFavourite.setSelected(true);
                    break;
                default:
                    break;
            }
        fSubject.setText(scribbleTitle);
        try(BufferedReader br=new BufferedReader(new FileReader(scribblelink));){
        StringBuilder sb=new StringBuilder();
        String line=br.readLine();
        while(line!=null){
        sb.append(line);
        sb.append(System.lineSeparator());
        line=br.readLine();
        }
        String note=sb.toString();
        fScribble.setText(note);
        }
        catch(Exception e){}
        }
        catch(Exception e){}    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        lTitle = new javax.swing.JLabel();
        fSubject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        fScribble = new javax.swing.JTextPane();
        bCancel = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bImportant = new javax.swing.JToggleButton();
        bFavourite = new javax.swing.JToggleButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lTitle.setFont(new java.awt.Font("Ubuntu", 0, 25)); // NOI18N
        lTitle.setToolTipText("");
        getContentPane().add(lTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 75));

        fSubject.setFont(new java.awt.Font("Ubuntu", 0, 23)); // NOI18N
        getContentPane().add(fSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 75, 800, 60));

        fScribble.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        jScrollPane1.setViewportView(fScribble);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 135, 800, 400));

        bCancel.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        bCancel.setText("Cancel");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });
        getContentPane().add(bCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 535, 100, 50));

        bSave.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });
        getContentPane().add(bSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 535, 100, 50));

        bImportant.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        bImportant.setText("Imporatant");
        bImportant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImportantActionPerformed(evt);
            }
        });
        getContentPane().add(bImportant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 535, 140, 40));

        bFavourite.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        bFavourite.setText("Favourite");
        bFavourite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFavouriteActionPerformed(evt);
            }
        });
        getContentPane().add(bFavourite, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 535, 135, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_bCancelActionPerformed
    private void save(){}
    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        opentitle=lTitle.getText();
        scribbleTitle=fSubject.getText();
        if(opentitle.contains("Add")){
        Date d=new Date();
        SimpleDateFormat sdf1=new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat sdf2=new SimpleDateFormat("hh:mm:ss");
        SimpleDateFormat sdf3=new SimpleDateFormat("ddMMyyyyhhmmssSSS");
        String currdate=sdf1.format(d);
        String currtime=sdf2.format(d);
        String name=sdf3.format(d);
        try{
            try(
        PrintWriter fw=new PrintWriter(name,"UTF-8");)
        {
            fw.write(fScribble.getText());
        }
        catch(Exception e){throw e;}
        Connection con=mysqlConnect.connection("root", "shrey");
        Statement stmt=con.createStatement();
        String query="Insert into Scribble values('"+currdate+"','"+currtime+"','"+scribbleTitle+"','"+name+"','"+special+"');";
        stmt.executeUpdate(query);
        stmt.close();
        con.close();
        JOptionPane.showMessageDialog(this, "Save Successful");
        this.dispose();
        homeGUI.refresh();
        }catch(Exception e){
        System.out.println("Error ");
        }
        }
        else{
        try{
            try(
        PrintWriter fw=new PrintWriter(scribblelink,"UTF-8");)
        {
            fw.write(fScribble.getText());
        }
        catch(Exception e){throw e;}
        Connection con=mysqlConnect.connection("root", "shrey");
        Statement stmt=con.createStatement();
        String query="Update Scribble set Title='"+scribbleTitle+"',special='"+special+"' where Link='"+scribblelink+"';";
        stmt.executeUpdate(query);
        stmt.close();
        con.close();
        JOptionPane.showMessageDialog(this, "Update Successful");
        this.dispose();
        homeGUI.refresh();
        }catch(Exception e){
        System.out.println("Error !!");}
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bImportantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bImportantActionPerformed
        if(bImportant.isSelected()){
        bFavourite.setSelected(false);
        special="Important";}
        else special=null;
        System.out.println(special);// TODO add your handling code here:
    }//GEN-LAST:event_bImportantActionPerformed

    private void bFavouriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFavouriteActionPerformed
        if(bFavourite.isSelected()){
        bImportant.setSelected(false);
        special="Favourite";}
        else special=null;
        System.out.println(special);
    }//GEN-LAST:event_bFavouriteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotepadGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotepadGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotepadGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotepadGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JToggleButton bFavourite;
    private javax.swing.JToggleButton bImportant;
    private javax.swing.JButton bSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextPane fScribble;
    private javax.swing.JTextField fSubject;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lTitle;
    // End of variables declaration//GEN-END:variables
}
